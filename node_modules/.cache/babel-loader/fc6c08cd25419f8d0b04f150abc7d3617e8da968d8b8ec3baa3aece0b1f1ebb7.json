{"ast":null,"code":"var _jsxFileName = \"/Users/juliaweppler/Documents/GitHub/CoffeeHouse/src/components/BarChart.js\",\n  _s = $RefreshSig$();\n// BarChart.js\nimport React, { useEffect } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BarChart = () => {\n  _s();\n  useEffect(() => {\n    // CHART INIT ------------------------------\n    const margin = {\n      top: 20,\n      right: 30,\n      bottom: 30,\n      left: 40\n    };\n    const width = 600 - margin.left - margin.right;\n    const height = 400 - margin.top - margin.bottom;\n\n    // Chart initialization in the global scope\n    const svg = d3.select('#chart-container').append('svg').attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom).append('g').attr('transform', `translate(${margin.left},${margin.top})`);\n    const xScale = d3.scaleBand().rangeRound([0, width]).paddingInner(0.1);\n    const yScale = d3.scaleLinear().range([height, 0]);\n    svg.append('g').attr('class', 'axis y-axis');\n    svg.append('g').attr('class', 'axis x-axis').attr('transform', `translate(0,${height})`);\n    svg.append('text').attr('class', 'y-axis-title').attr('transform', 'rotate(-90)').attr('y', 0).attr('x', 0).attr('dy', '1em').style('text-anchor', 'middle');\n\n    // Initialize the 'type' and 'sortDirection' variables\n    let type = document.querySelector('#group-by').value;\n    let sortDirection = 'ascending';\n\n    // Add the sort button in HTML\n    const sortButton = document.createElement('button');\n    sortButton.innerHTML = 'Sort';\n    sortButton.addEventListener('click', () => {\n      sortDirection = sortDirection === 'ascending' ? 'descending' : 'ascending';\n      updateChart(data, type, sortDirection);\n    });\n    document.getElementById('chart-container').appendChild(sortButton);\n\n    // CHART UPDATE FUNCTION -------------------\n    function updateChart(data, type, sortDirection) {\n      // Update scale domains\n      xScale.domain(data.map(d => d.company));\n\n      // Sorting based on the selected type and direction\n      data.sort((a, b) => {\n        const aValue = a[type];\n        const bValue = b[type];\n        return sortDirection === 'ascending' ? aValue - bValue : bValue - aValue;\n      });\n\n      // Update bars with transitions\n      const bars = svg.selectAll('.bar').data(data, d => d.company);\n      bars.enter().append('rect').attr('class', 'bar').merge(bars).transition().delay((d, i) => i * 50).duration(500).attr('x', d => xScale(d.company)).attr('y', d => yScale(d[type])).attr('width', xScale.bandwidth()).attr('height', d => height - yScale(d[type]));\n      bars.exit().remove();\n\n      // Update axes and axis title with transitions\n      svg.select('.x-axis').transition().duration(500).call(d3.axisBottom(xScale));\n      svg.select('.y-axis').transition().duration(500).call(d3.axisLeft(yScale));\n      svg.select('.y-axis-title').text(type === 'stores' ? 'Stores' : 'Revenue'); // Manually update the axis title based on the type\n    }\n\n    // CHART UPDATES ---------------------------\n\n    // Loading data\n    d3.csv('/coffeehouse_data.csv').then(initialData => {\n      data = initialData;\n      updateChart(data, type, sortDirection);\n    });\n\n    // Handling the type change\n    document.querySelector('#group-by').addEventListener('change', function () {\n      type = this.value;\n      updateChart(data, type, sortDirection);\n    });\n\n    // Handling the sorting direction change (if needed)\n    // This is already covered by the sort button click event\n  }, []); // useEffect dependencies\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"group-by\",\n      children: \"Group By\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"group-by\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"stores\",\n        children: \"Stores worldwide\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"revenue\",\n        children: \"Revenue in billion U.S. dollars\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chart-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(BarChart, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = BarChart;\nexport default BarChart;\nvar _c;\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"names":["React","useEffect","d3","jsxDEV","_jsxDEV","BarChart","_s","margin","top","right","bottom","left","width","height","svg","select","append","attr","xScale","scaleBand","rangeRound","paddingInner","yScale","scaleLinear","range","style","type","document","querySelector","value","sortDirection","sortButton","createElement","innerHTML","addEventListener","updateChart","data","getElementById","appendChild","domain","map","d","company","sort","a","b","aValue","bValue","bars","selectAll","enter","merge","transition","delay","i","duration","bandwidth","exit","remove","call","axisBottom","axisLeft","text","csv","then","initialData","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["/Users/juliaweppler/Documents/GitHub/CoffeeHouse/src/components/BarChart.js"],"sourcesContent":["// BarChart.js\nimport React, { useEffect } from 'react';\nimport * as d3 from 'd3';\n\nconst BarChart = () => {\n  useEffect(() => {\n    // CHART INIT ------------------------------\n    const margin = { top: 20, right: 30, bottom: 30, left: 40 };\n    const width = 600 - margin.left - margin.right;\n    const height = 400 - margin.top - margin.bottom;\n\n    // Chart initialization in the global scope\n    const svg = d3.select('#chart-container').append('svg').attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom).append('g').attr('transform', `translate(${margin.left},${margin.top})`);\n\n    const xScale = d3.scaleBand().rangeRound([0, width]).paddingInner(0.1);\n    const yScale = d3.scaleLinear().range([height, 0]);\n\n    svg.append('g').attr('class', 'axis y-axis');\n    svg.append('g').attr('class', 'axis x-axis').attr('transform', `translate(0,${height})`);\n    svg.append('text').attr('class', 'y-axis-title').attr('transform', 'rotate(-90)').attr('y', 0).attr('x', 0).attr('dy', '1em').style('text-anchor', 'middle');\n\n    // Initialize the 'type' and 'sortDirection' variables\n    let type = document.querySelector('#group-by').value;\n    let sortDirection = 'ascending';\n\n    // Add the sort button in HTML\n    const sortButton = document.createElement('button');\n    sortButton.innerHTML = 'Sort';\n    sortButton.addEventListener('click', () => {\n      sortDirection = sortDirection === 'ascending' ? 'descending' : 'ascending';\n      updateChart(data, type, sortDirection);\n    });\n    document.getElementById('chart-container').appendChild(sortButton);\n\n    // CHART UPDATE FUNCTION -------------------\n    function updateChart(data, type, sortDirection) {\n      // Update scale domains\n      xScale.domain(data.map(d => d.company));\n\n      // Sorting based on the selected type and direction\n      data.sort((a, b) => {\n        const aValue = a[type];\n        const bValue = b[type];\n        return sortDirection === 'ascending' ? aValue - bValue : bValue - aValue;\n      });\n\n      // Update bars with transitions\n      const bars = svg.selectAll('.bar').data(data, d => d.company);\n\n      bars\n        .enter()\n        .append('rect')\n        .attr('class', 'bar')\n        .merge(bars)\n        .transition()\n        .delay((d, i) => i * 50)\n        .duration(500)\n        .attr('x', d => xScale(d.company))\n        .attr('y', d => yScale(d[type]))\n        .attr('width', xScale.bandwidth())\n        .attr('height', d => height - yScale(d[type]));\n\n      bars.exit().remove();\n\n      // Update axes and axis title with transitions\n      svg.select('.x-axis').transition().duration(500).call(d3.axisBottom(xScale));\n      svg.select('.y-axis').transition().duration(500).call(d3.axisLeft(yScale));\n      svg.select('.y-axis-title').text(type === 'stores' ? 'Stores' : 'Revenue'); // Manually update the axis title based on the type\n    }\n\n    // CHART UPDATES ---------------------------\n\n    // Loading data\n    d3.csv('/coffeehouse_data.csv').then(initialData => {\n      data = initialData;\n      updateChart(data, type, sortDirection);\n    });\n\n    // Handling the type change\n    document.querySelector('#group-by').addEventListener('change', function () {\n      type = this.value;\n      updateChart(data, type, sortDirection);\n    });\n\n    // Handling the sorting direction change (if needed)\n    // This is already covered by the sort button click event\n\n  }, []); // useEffect dependencies\n\n  return (\n    <div>\n      <label htmlFor=\"group-by\">Group By</label>\n      <select id=\"group-by\">\n        <option value=\"stores\">Stores worldwide</option>\n        <option value=\"revenue\">Revenue in billion U.S. dollars</option>\n      </select>\n      <div id=\"chart-container\"></div>\n    </div>\n  );\n};\nexport default BarChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}