{"ast":null,"code":"var _jsxFileName = \"/Users/juliaweppler/Documents/GitHub/CoffeeHouse/src/components/BarChart.js\",\n  _s = $RefreshSig$();\n// BarChart.js\nimport React, { useEffect } from 'react';\nimport * as d3 from 'd3';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet data;\nconst BarChart = () => {\n  _s();\n  useEffect(() => {\n    // CHART INIT ------------------------------\n    const margin = {\n      top: 50,\n      right: 30,\n      bottom: 30,\n      left: 40\n    };\n    const height = 500 - margin.top - margin.bottom;\n    const width = 900 - margin.left - margin.right; // Adjust the width as needed\n\n    // Chart initialization in the global scope\n    const svg = d3.select('#chart-container').append('svg').attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom).append('g').attr('transform', `translate(${2 * margin.left},${margin.top})`);\n    const xScale = d3.scaleBand().rangeRound([0, width - 30]).paddingInner(0.1);\n    const yScale = d3.scaleLinear().range([height, 0]);\n    svg.append('g').attr('class', 'axis y-axis');\n    svg.append('g').attr('class', 'axis x-axis').attr('transform', `translate(0,${height})`);\n    svg.append('text').attr('class', 'y-axis-title').attr('transform', `translate(${-margin.left}, ${height / 2}) rotate(0)`) // Adjust the translation values as needed\n    .attr('dy', '-1em') // Adjust the vertical positioning above the graph\n    .style('text-anchor', 'start').style('text-anchor', 'middle');\n\n    // Initialize the 'type' and 'sortDirection' variables\n    let type = document.querySelector('#group-by').value;\n    let sortDirection = 'ascending';\n\n    // CHART UPDATE FUNCTION -------------------\n    function updateChart(data, type, sortDirection) {\n      // Update scale domains\n      xScale.domain(data.map(d => d.company));\n      yScale.domain([0, d3.max(data, d => d[type])]);\n      ;\n      // Sorting based on the selected type and direction\n      data.sort((a, b) => {\n        const aValue = a[type];\n        const bValue = b[type];\n        return sortDirection === 'ascending' ? aValue - bValue : bValue - aValue;\n      });\n\n      // Update bars with transitions\n      const bars = svg.selectAll('.bar').data(data, d => d.company);\n      bars.enter().append('rect').attr('class', 'bar').merge(bars).transition().delay((d, i) => i * 50).duration(500).attr('x', d => xScale(d.company)).attr('y', d => yScale(d[type])).attr('width', xScale.bandwidth()).attr('height', d => height - yScale(d[type]));\n      bars.exit().remove();\n\n      // Update axes and axis title with transitions\n      svg.select('.x-axis').transition().duration(500).call(d3.axisBottom(xScale));\n      svg.select('.y-axis').transition().duration(500).call(d3.axisLeft(yScale));\n\n      // Dynamically update the y-axis title based on the selected type\n      const yTitleText = type === 'stores' ? 'Stores worldwide' : 'Revenue in billions U.S. dollars';\n      svg.select('.y-axis-title').text(yTitleText).attr('transform', `translate(${-margin.left / 10 + 50}, ${margin.top - 40}) rotate(0)`) // Adjust the translation values as needed\n      .attr('dy', '-1em') // Adjust the vertical positioning above the graph\n      .style('text-anchor', 'start').style('text-anchor', 'middle');\n      ; // Adjust the translation and text as needed\n    }\n\n    // CHART UPDATES ---------------------------\n\n    d3.csv('data.csv', d3.autoType).then(initialData => {\n      data = initialData;\n      updateChart(data, type, sortDirection);\n    });\n\n    // Handling the type change\n    document.querySelector('#group-by').addEventListener('change', function () {\n      type = this.value;\n      updateChart(data, type, sortDirection);\n    });\n    const sortButton = document.createElement('button');\n    sortButton.innerHTML = 'Sort';\n    sortButton.className = 'sort-button';\n    sortButton.addEventListener('click', () => {\n      sortDirection = sortDirection === 'ascending' ? 'descending' : 'ascending';\n      updateChart(data, type, sortDirection);\n    });\n    document.getElementById('chart-container').appendChild(sortButton);\n\n    // Handling the sorting direction change (if needed)\n    // This is already covered by the sort button click event\n  }, []); // useEffect dependencies\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"group-by\",\n      children: \"Group By:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"group-by\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"stores\",\n        children: \"Stores worldwide\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"revenue\",\n        children: \"Revenue in billion U.S. dollars\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chart-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(BarChart, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = BarChart;\nexport default BarChart;\nvar _c;\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"names":["React","useEffect","d3","jsxDEV","_jsxDEV","data","BarChart","_s","margin","top","right","bottom","left","height","width","svg","select","append","attr","xScale","scaleBand","rangeRound","paddingInner","yScale","scaleLinear","range","style","type","document","querySelector","value","sortDirection","updateChart","domain","map","d","company","max","sort","a","b","aValue","bValue","bars","selectAll","enter","merge","transition","delay","i","duration","bandwidth","exit","remove","call","axisBottom","axisLeft","yTitleText","text","csv","autoType","then","initialData","addEventListener","sortButton","createElement","innerHTML","className","getElementById","appendChild","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["/Users/juliaweppler/Documents/GitHub/CoffeeHouse/src/components/BarChart.js"],"sourcesContent":["// BarChart.js\nimport React, { useEffect } from 'react';\nimport * as d3 from 'd3';\nimport '../App.css';\n\nlet data; \n\nconst BarChart = () => {\n  useEffect(() => {\n\n    // CHART INIT ------------------------------\n    const margin = { top: 50, right: 30, bottom: 30, left: 40 };\n    const height = 500 - margin.top - margin.bottom;\n\n    const width = 900 - margin.left - margin.right; // Adjust the width as needed\n\n  // Chart initialization in the global scope\n  const svg = d3.select('#chart-container').append('svg')\n  .attr('width', width + margin.left + margin.right)\n  .attr('height', height + margin.top + margin.bottom)\n  .append('g')\n  .attr('transform', `translate(${2 * margin.left},${margin.top})`);\n  const xScale = d3.scaleBand().rangeRound([0, width - 30]).paddingInner(0.1);\n  \n    const yScale = d3.scaleLinear().range([height, 0]);\n\n    svg.append('g').attr('class', 'axis y-axis');\n    svg.append('g').attr('class', 'axis x-axis').attr('transform', `translate(0,${height})`);\n    svg.append('text').attr('class', 'y-axis-title').attr('transform', `translate(${-margin.left}, ${height / 2}) rotate(0)`) // Adjust the translation values as needed\n    .attr('dy', '-1em') // Adjust the vertical positioning above the graph\n    .style('text-anchor', 'start').style('text-anchor', 'middle');\n\n    // Initialize the 'type' and 'sortDirection' variables\n    let type = document.querySelector('#group-by').value;\n    let sortDirection = 'ascending';\n\n\n    // CHART UPDATE FUNCTION -------------------\n    function updateChart(data, type, sortDirection) {\n      // Update scale domains\n      xScale.domain(data.map(d => d.company));\n      yScale.domain([0, d3.max(data, d => d[type])]);;\n      // Sorting based on the selected type and direction\n      data.sort((a, b) => {\n        const aValue = a[type];\n        const bValue = b[type];\n        return sortDirection === 'ascending' ? aValue - bValue : bValue - aValue;\n      });\n\n      // Update bars with transitions\n      const bars = svg.selectAll('.bar').data(data, d => d.company);\n\n      bars\n        .enter()\n        .append('rect')\n        .attr('class', 'bar')\n        .merge(bars)\n        .transition()\n        .delay((d, i) => i * 50)\n        .duration(500)\n        .attr('x', d => xScale(d.company))\n        .attr('y', d => yScale(d[type]))\n        .attr('width', xScale.bandwidth())\n        .attr('height', d => height - yScale(d[type]));\n\n      bars.exit().remove();\n\n      // Update axes and axis title with transitions\n  svg.select('.x-axis').transition().duration(500).call(d3.axisBottom(xScale));\n  svg.select('.y-axis').transition().duration(500).call(d3.axisLeft(yScale));\n  \n  // Dynamically update the y-axis title based on the selected type\n  const yTitleText = type === 'stores' ? 'Stores worldwide' : 'Revenue in billions U.S. dollars';\n  svg.select('.y-axis-title').text(yTitleText).attr('transform', `translate(${-margin.left/10 + 50}, ${margin.top - 40}) rotate(0)`) // Adjust the translation values as needed\n  .attr('dy', '-1em') // Adjust the vertical positioning above the graph\n  .style('text-anchor', 'start').style('text-anchor', 'middle');; // Adjust the translation and text as needed\n    }\n\n    // CHART UPDATES ---------------------------\n\n    d3.csv('data.csv', d3.autoType).then(initialData => {\n        data = initialData;\n        updateChart(data, type, sortDirection);\n      });\n    \n\n    // Handling the type change\n    document.querySelector('#group-by').addEventListener('change', function () {\n      type = this.value;\n      updateChart(data, type, sortDirection);\n    });\n    const sortButton = document.createElement('button');\n  sortButton.innerHTML = 'Sort';\n  sortButton.className = 'sort-button';\n  sortButton.addEventListener('click', () => {\n    sortDirection = sortDirection === 'ascending' ? 'descending' : 'ascending';\n    updateChart(data, type, sortDirection);\n  });\n  document.getElementById('chart-container').appendChild(sortButton);\n\n    // Handling the sorting direction change (if needed)\n    // This is already covered by the sort button click event\n\n  }, []); // useEffect dependencies\n\n  return (\n    <div>\n      <label htmlFor=\"group-by\">Group By:</label>\n      <select id=\"group-by\">\n        <option value=\"stores\">Stores worldwide</option>\n        <option value=\"revenue\">Revenue in billion U.S. dollars</option>\n      </select>\n      <div id=\"chart-container\"></div>    \n    </div>\n  );\n};\nexport default BarChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}